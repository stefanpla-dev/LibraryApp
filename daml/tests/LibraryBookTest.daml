module LibraryBookTest where

import Daml.Script
import LibraryBook
import DA.Date (Month(Jan), date)


libraryAcceptScenario : Script ()

libraryAcceptScenario = script do 
    library <- allocateParty "Columbus Metropolitan Library"
    borrower <- allocateParty "Stefan"

    let bookDetails = BookDetails with
            title = "Blue Highways"
            author = "William Least Heat-Moon"
            isbn = "987654321"

    libraryBookCid <- submit library do
        createCmd LibraryBook with 
            details = bookDetails
            library = library 

    currentTime <- getTime
    let dueDate = date 1970 Jan 14
    let expiration = addRelTime currentTime (minutes 15)

    offeredBookCid <- submit library do
        exerciseCmd libraryBookCid Offer with
            borrower = borrower
            dueDate = dueDate
            expiration = expiration

    acceptedBookCid <- submit borrower do
        exerciseCmd offeredBookCid Accept

    pure ()

--needed new test scenario as the test above archives the contract once the Accept choice is exercised.
libraryDeclineScenario = script do 
    library <- allocateParty "Columbus Metropolitan Library"
    borrower <- allocateParty "Stefan"

    let bookDetails = BookDetails with
            title = "Blue Highways"
            author = "William Least Heat-Moon"
            isbn = "987654321"

    libraryBookCid <- submit library do
        createCmd LibraryBook with 
            details = bookDetails
            library = library 

    currentTime <- getTime
    let dueDate = date 1970 Jan 14
    let expiration = addRelTime currentTime (minutes 15)

    offeredBookCid <- submit library do
        exerciseCmd libraryBookCid Offer with
            borrower = borrower
            dueDate = dueDate
            expiration = expiration

    declinedBookCid <- submit borrower do
        exerciseCmd offeredBookCid Decline

    pure ()

expireScenario = script do
    library <- allocateParty "Columbus Metropolitan Library"
    borrower <- allocateParty "Stefan"

    let bookDetails = BookDetails with
            title = "Blue Highways"
            author = "William Least Heat-Moon"
            isbn = "987654321"

    libraryBookCid <- submit library do
        createCmd LibraryBook with 
            details = bookDetails
            library = library 

    currentTime <- getTime
    let dueDate = date 1970 Jan 14
    let expiration = addRelTime currentTime (minutes 15)

    offeredBookCid <- submit library do
        exerciseCmd libraryBookCid Offer with
            borrower = borrower
            dueDate = dueDate
            expiration = expiration

    setTime (addRelTime currentTime (minutes 16)) --ensure that correct period of time has passed before exercising the Expire choice on the offeredLibraryBook.

    declinedBookCid <- submit library do
        exerciseCmd offeredBookCid Expire
    
    pure ()